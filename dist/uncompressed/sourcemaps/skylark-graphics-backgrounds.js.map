{"version":3,"sources":["skylark-graphics-backgrounds.js"],"names":[],"mappingsfile":"../skylark-graphics-backgrounds.js","sourcesContent":["define('skylark-graphics-backgrounds/backgrounds',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"graphics.backgrounds\",{});\r\n});\ndefine('skylark-graphics-brushes/LinearGradientBrush',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./brushes\",\r\n\t\"./GradientBrush\"\r\n\r\n],function(langx,brushes,GradientBrush) {\r\n\t\r\n\tvar LinearGradientBrush = GradientBrush.inherit({\r\n\t\t\"klassName\"\t:\t\"LinearGradientBrush\",\r\n\r\n\t});\r\n\r\n\tLinearGradientBrush.fromString = function(s) {\r\n\t\tvar p = CssUtils.parseBackgroundImage(s);\r\n\t\tif (p.type == \"linear\" ) {\r\n\t\t\treturn new LinearGradientBrush({\r\n\t\t\t\tstartPoint : p.webKitPosn1,\r\n\t\t\t\tendPoint   : p.webKitPosn2,\r\n\t\t\t\tfromColor  : p.stops[0].color,\r\n\t\t\t\ttoColor    : p.stops[p.stops.length-1].color,\r\n\t\t\t\tstops      : p.stops.slice(1,p.stops.length-1).map(function(item){\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toffset : item.pos,\r\n\t\t\t\t\t\tcolor : item.color\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\treturn brushes.LinearGradientBrush = LinearGradientBrush;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-backgrounds/BackgroundAttachment',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\"\r\n],function(langx,backgrounds) {\r\n\r\n\tvar BackgroundAttachment = \t[\"fixed\", \"scroll\"\t];\r\n\r\n\tlangx.mixin(BackgroundAttachment,{\r\n\t\t\"fixed\"  : 0, \r\n\t\t\"scroll\" : 1\r\n\t});\r\n\r\n\tBackgroundAttachment.fromCss = function(css){\r\n\t\treturn BackgroundAttachment.fromString(css.backgroundAttachment);\r\n\t};\t\r\n\r\n\tBackgroundAttachment.toCss = function(ba,css) {\r\n\t\tif (!css) {\r\n\t\t\tcss = {};\r\n\t\t}\r\n\t\tcss.backgroundAttachment = ba.toString();\r\n\t\t\r\n\t\treturn css;\r\n\t};\r\n\t\r\n\treturn backgrounds.BackgroundAttachment = BackgroundAttachment;\r\n\r\n});\r\n\ndefine('skylark-graphics-backgrounds/BackgroundOrigin',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\"\r\n],function(langx,backgrounds) {\r\n\r\n\tvar BackgroundOrigin = [\"borderBox\",\"contentBox\", \"paddingBox\"\t];\r\n\r\n\tlangx.mixin(BackgroundOrigin,{\r\n\t\t\"borderBox\" : 0,\r\n\t\t\"contentBox\" : 1, \r\n\t\t\"paddingBox\" : 2\r\n\t});\r\n\r\n\tBackgroundOrigin.fromCss = function(css) {\r\n\t\tvar s = css.backgroundOrigin;\r\n\t\tswitch (s) {\r\n\t\t\tcase \"border-box\" : \r\n\t\t\t\treturn BackgroundOrigin.borderBox;\r\n\t\t\tcase \"content-box\" : \r\n\t\t\t\treturn BackgroundOrigin.contentBox;\r\n\t\t\tcase \"padding-box\" : \r\n\t\t\t\treturn BackgroundOrigin.paddingBox;\r\n\t\t\tdefault :\r\n\t\t\t\treturn undefined;\t\t\t\r\n\t\t}\r\n\t};\r\n\t\r\n\tBackgroundOrigin.toCss = function(origin,css) {\r\n\t\tif (!css) {\r\n\t\t\tcss = {};\r\n\t\t}\r\n\t\tvar s;\r\n\t\tswitch (origin) {\r\n\t\t\tcase BackgroundOrigin.borderBox : \r\n\t\t\t\ts = \"border-box\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase BackgroundOrigin.contentBox : \r\n\t\t\t\ts = \"content-box\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase BackgroundOrigin.paddingBox : \r\n\t\t\t\ts=  \"padding-box\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\treturn undefined;\t\t\t\r\n\t\t}\r\n\t\tcss.backgroundOrigin = s;\r\n\r\n\t\treturn css;\r\n\t};\r\n\r\n\treturn backgrounds.BackgroundOrigin = BackgroundOrigin;\r\n\r\n});\r\n\ndefine('skylark-graphics-backgrounds/BackgroundPosition',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\"\r\n],function(langx,backgrounds) {\r\n\r\n\r\n\tvar BackgroundPosition = langx.klass({\r\n\t\t\"klassName\"\t:\t\"BackgroundPosition\",\r\n\r\n\t\t\"x\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.x;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"y\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.y;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new BackgroundPosition(_.x,_.y);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*BackgroundPosition*/bp) {\r\n\t\t\treturn !bs || bs.type != this.type || bs.width && bs.width.notEqual(this.width) || bs.height && bs.height.notEqual(this.height);\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*BackgroundPosition*/bp){\r\n\t\t\treturn  !this.notEqual(bp);\r\n\t\t},\r\n\r\n\t\t\"toString\" : function(delimiter){\r\n\t\t\tdelimiter = delimiter ? delimiter : \" \";\r\n\t\t\t\r\n\t\t\tvar xs,ys,x = this.x,y= this.y;\r\n\r\n\t\t\txs = x.toString();\r\n\t\t\tif (xs == \"min\") {\r\n\t\t\t\txs = \"left\";\r\n\t\t\t} else if (xs == \"mid\") {\r\n\t\t\t\txs = \"center\";\r\n\t\t\t} else if (xs == \"max\") {\r\n\t\t\t\txs = \"right\";\r\n\t\t\t}\r\n\r\n\t\t\tys = y.toString();\r\n\t\t\tif (ys == \"min\") {\r\n\t\t\t\tys = \"top\";\r\n\t\t\t} else if (xs == \"mid\") {\r\n\t\t\t\tys = \"center\";\r\n\t\t\t} else if (xs == \"max\") {\r\n\t\t\t\tys = \"bottom\";\r\n\t\t\t}\r\n\r\n\t\t\treturn xs + delimiter + ys;\r\n\r\n\t\t},\t\r\n\t\t\r\n\t\t\"_construct\" : function(x,y){\r\n\t\t\tvar props = {};\r\n\t\t\tif (x != undefined) {\r\n\t\t\t\tif (Type.isString(x)) {\r\n\t\t\t\t\tif (x == \"left\") {\r\n\t\t\t\t\t\tx = \"min\";\r\n\t\t\t\t\t} else if (x == \"center\") {\r\n\t\t\t\t\t\tx = \"mid\";\r\n\t\t\t\t\t} else if (x == \"right\") {\r\n\t\t\t\t\t\tx = \"max\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprops.x = x;\r\n\t\t\t}\r\n\t\t\tif (y != undefined) {\r\n\t\t\t\tif (Type.isString(y)) {\r\n\t\t\t\t\tif (y == \"top\") {\r\n\t\t\t\t\t\ty = \"min\";\r\n\t\t\t\t\t} else if (y == \"center\") {\r\n\t\t\t\t\t\ty = \"mid\";\r\n\t\t\t\t\t} else if (y == \"bottom\") {\r\n\t\t\t\t\t\ty = \"max\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprops.y = y;\r\n\t\t\t}\r\n\t\t\tthis._ = props;\r\n\t\t}\r\n\t});\r\n\r\n\t\r\n\tBackgroundPosition.fromString = function(s) {\r\n\t\tvar a = s.split(\" \");\r\n        return BackgroundPosition.fromArray(a)\r\n\t};\r\n\r\n\tBackgroundPosition.fromPlain = function(o) {\r\n\t\treturn new BackgroundPosition(o.x,o.y);\r\n\t};\r\n\r\n\tBackgroundPosition.fromArray = function(a) {\r\n\t\treturn new BackgroundPosition(a[0],a.length>1?a[1]:\"center\");\r\n\t};\r\n\r\n\tBackgroundPosition.fromCss = function(css){\r\n\t\tif (css.backgroundPosition != undefined) {\r\n\t\t\treturn BackgroundPosition.fromString(css.backgroundPosition);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\t\r\n\r\n\tBackgroundPosition.toCss = function(bp,css) {\r\n\t\tif (!css) {\r\n\t\t\tcss = {};\r\n\t\t}\r\n\t\tif (bp) {\r\n\t\t\tcss.backgroundPosition = bp.toString();\r\n\t\t}\r\n\t\t\r\n\t\treturn css;\r\n\t};\r\n\r\n\treturn backgrounds.BackgroundPosition = BackgroundPosition;\r\n\t\r\n});\t\r\n\r\n\ndefine('skylark-graphics-backgrounds/BackgroundSizeType',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\"\r\n],function(langx,backgrounds) {\r\n\r\n\tvar BackgroundSizeType =[\"auto\",\"contain\",\"cover\",\"measure\"];\r\n\t\r\n\tlangx.mixin(BackgroundSizeType,{\r\n\t\t\"auto\" : 0,\r\n\t\t\"contain\" : 1,\r\n\t\t\"cover\" : 2,\r\n\t\t\"measure\" : 3\r\n\t});\r\n\r\n\r\n\treturn backgrounds.BackgroundSizeType = BackgroundSizeType;\r\n\r\n});\r\n\ndefine('skylark-graphics-backgrounds/BackgroundSize',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\",\r\n\t\"./BackgroundSizeType\"\r\n],function(langx,backgrounds,BackgroundSizeType) {\r\n\r\n\tvar BackgroundSize = langx.klass({\r\n\t\t\"klassName\"\t:\t\"BackgroundSize\",\r\n\r\n\t\t\"type\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.x;\r\n\t\t\t},\r\n\t\t\tset : function(t) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t_.type = t;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase BackgroundSizeType.auto :\r\n\t\t\t\t\tcase BackgroundSizeType.contain :\r\n\t\t\t\t\tcase BackgroundSizeType.cover :\r\n\t\t\t\t\t\t_.width = null;\r\n\t\t\t\t\t\t_.height = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"height\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.height;\r\n\t\t\t},\r\n\t\t\tset : function(w) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.type;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase BackgroundSizeType.measure :\r\n\t\t\t\t\t\t_.width = w;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"width\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.width;\r\n\t\t\t},\r\n\t\t\tset : function(w) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.type;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase BackgroundSizeType.measure :\r\n\t\t\t\t\t\t_.width = w;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new BackgroundSize(_.type,_.width,_height);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*BackgroundSize*/bs) {\r\n\t\t\treturn !bs || bs.type != this.type || bs.width && bs.width.notEqual(this.width) || bs.height && bs.height.notEqual(this.height);\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*BackgroundSize*/bs){\r\n\t\t\treturn  !this.notEqual(bs);\r\n\t\t},\r\n\r\n\t\t\"toString\" : function(delimiter){\r\n\t\t\tdelimiter = delimiter ? delimiter : \" \";\r\n\t\t\tswitch (this.type) {\r\n\t\t\t\tcase BackgroundSizeType.measure :\r\n\t\t\t\t\treturn this.width.toString()+delimiter + this.height.toString();\r\n\t\t\t\tdefault :\r\n\t\t\t\t\treturn this.type.toString();\r\n\t\t\t}\r\n\r\n\r\n\t\t},\t\r\n\t\t\r\n\t\t\"-constructor-\"\t:\t{\t\t\r\n\t\t\t\"initialize\" : function(type,width,height){\r\n\t\t\t\tvar props = {};\r\n\t\t\t\tif (type != undefined) {\r\n\t\t\t\t\tprops.type = type;\r\n\t\t\t\t}\r\n\t\t\t\tif (width != undefined) {\r\n\t\t\t\t\tprops.width = width;\r\n\t\t\t\t}\r\n\t\t\t\tif (height != undefined) {\r\n\t\t\t\t\tprops.height = height;\r\n\t\t\t\t}\r\n\t\t\t\tthis._setupAttributeValues(props);\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t});\r\n\r\n\r\n\tBackgroundSize.fromNumber = function(n) {\r\n        return new BackgroundSize(MeasureType.unit,n,MeasureUnit.px);\r\n\r\n\t};\r\n\r\n\tBackgroundSize.fromString = function(s) {\r\n\t\tvar type ;\r\n\t\tif (s==\"auto\"){\r\n\t\t\ttype =  BackgroundSizeType.auto;\r\n\t\t} else if (s == \"contain\") {\r\n\t\t\ttype =  BackgroundSizeType.contain;\r\n\t\t} else if (s == \"cover\") {\r\n\t\t\ttype =  BackgroundSizeType.cover;\r\n\t\t}\r\n\r\n\t\tif (type) {\r\n\t\t\treturn new BackgroundSize(type);\r\n\t\t}\r\n\t\t\r\n\t\ttype = BackgroundSizeType.measure;\r\n\r\n\t\tvar units = MeasureUnit.enumOptions().map(function(item){\r\n\t\t\t\treturn item.getText();\r\n\t\t\t}).concat(\"%\"),\r\n\t\t\tvalue,\r\n\t\t\tunit;\r\n        for (var i = 0; i < units.length; i++) {\r\n            if (s.indexOf(units[i]) != -1) {\r\n                value = parseInt(s.substring(0, s.length - units[i].length),10);\r\n                if (units[i] == \"%\") {\r\n                \ttype = MeasureType.percent;\r\n                } else {\r\n                \ttype = MeasureType.unit;\r\n                \tunit = MeasureUnit.fromString(units[i]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return new BackgroundSize(type,value,unit);\r\n\t};\r\n\r\n\tBackgroundSize.fromPlain = function(o) {\r\n\t\treturn new Measure(o.type,o.value,o.unit);\r\n\t};\r\n\r\n\tBackgroundSize.fromArray = function(a) {\r\n\t\treturn new BackgroundSize(a[0],a.length>1?a[1]:\"undefined\",a.length>1?a[2]:undefined);\r\n\t};\r\n\r\n\tBackgroundSize.fromCss = function(css){\r\n\t\tif (css.backgroundSize != undefined) {\r\n\t\t\treturn BackgroundSize.fromString(css.backgroundSize);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\t\r\n\r\n\tBackgroundSize.toCss = function(bs,css) {\r\n\t\tif (!css) {\r\n\t\t\tcss = {};\r\n\t\t}\r\n\t\tif (bs) {\r\n\t\t\tcss.backgroundSize = bs.toString();\r\n\t\t}\r\n\t\treturn css;\r\n\t};\r\n\r\n\tBackgroundSize.auto = new BackgroundSize(BackgroundSizeType.auto);\r\n\t\r\n\r\n\treturn BackgroundSize;\r\n\t\r\n});\t\r\n\r\n\ndefine('skylark-graphics-backgrounds/Background',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-graphics-brushes/Brush\",\r\n\t\"skylark-graphics-brushes/SolidColorBrush\",\r\n\t\"skylark-graphics-brushes/ImageBrush\",\r\n\t\"skylark-graphics-brushes/LinearGradientBrush\",\r\n\t\"skylark-graphics-brushes/RadialGradientBrush\",\r\n\t\"skylark-graphics-brushes/TileRepeateMode\",\r\n\t\"./backgrounds\",\r\n\t\"./BackgroundAttachment\",\r\n\t\"./BackgroundOrigin\",\r\n\t\"./BackgroundPosition\",\r\n\t\"./BackgroundSize\"\r\n],function(\r\n\tlangx,\r\n\tBrush,\r\n\tSolidColorBrush,\r\n\tImageBrush,\r\n\tLinearGradientBrush,\r\n\tRadialGradientBrush,\r\n\tTileRepeateMode,\r\n\tbackgrounds,\r\n\tBackgroundAttachment,\r\n\tBackgroundOrigin,\r\n\tBackgroundPosition,\r\n\tBackgroundSize\r\n) {\r\n\tvar Background = langx.klass({\r\n\t\t\r\n\t\t\"klassName\"\t:\t\"Background\",\r\n\r\n\t\t\"attachment\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.attachment;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"fillStyle\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.fillStyle;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"origin\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.origin;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"position\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.position;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"repeat\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.repeat;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"size\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.size;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoCss : function(css) {\r\n\t\t\treturn Background.toCss(this,css);\r\n\t\t},\r\n\t\t\"_construct\" : function(params){\r\n\t\t\tthis._ = {\r\n\t\t\t\tfillStyle : params.fillStyle,\r\n\t\t\t\trepeat \t  : params.repeat,\r\n\t\t\t\torigin \t  : params.origin,\r\n\t\t\t\tsize \t  : params.size,\r\n\t\t\t\tposition  : params.position,\r\n\t\t\t\tattachment: params.attachment\r\n\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tBackground.fromPlain = function(o) {\r\n\t\tvar fillStyle = o.fillStyle;\r\n\t\tvar brush = SolidColorBrush.fromString(fillStyle)\r\n\t\tif (!brush) {\r\n\t\t\tbrush = ImageBrush.fromString(fillStyle);\r\n\t\t}\t\r\n\t\tif (!brush) {\r\n\t\t\tbrush = LinearGradientBrush.fromString(fillStyle);\r\n\t\t}\r\n\t\tif (!brush) {\r\n\t\t\tbrush = RadialGradientBrush.fromString(fillStyle);\r\n\t\t}\r\n\t\tif (brush) {\r\n\t\t\treturn new Background({\r\n\t\t\t\tfillStyle : brush,\r\n\t\t\t\trepeat    : o.repeat,\r\n\t\t\t\torigin    : o.origin,\r\n\t\t\t\tsize      : o.size,\r\n\t\t\t\tposition  : o.position,\r\n\t\t\t\tattachment: o.attachment\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tBackground.fromCss = function(css) {\r\n        var props = {\r\n            fillStyle : css.backgroundColor || css.backgroundImage,\r\n            position : css.backgroundPosition,\r\n            repeat : css.backgroundRepeat,\r\n            origin : css.backgroundOrigin,\r\n            attachment : css.backgroundAttachment,\r\n            size : css.backgroundSize,\r\n\r\n        }\r\n        return Background.fromPlain(props);\r\n\t};\r\n\r\n\tBackground.toCss = function(bg,css) {\r\n        if (!css) {\r\n        \tcss = {};\r\n        }\r\n        var fillStyle = bg.fillStyle;\r\n        if (fillStyle) {\r\n        \tif (Type.isInstanceOf(fillStyle,SolidColorBrush)) {\r\n        \t\tcss.backgroundColor = fillStyle.toString();\r\n        \t} else {\r\n        \t\tcss.backgroundImage = fillStyle.toString();\r\n        \t}\r\n    \t}\r\n    \tif (bg.position) {\r\n        \tcss.backgroundPosition = bg.position.toString();\r\n    \t}\r\n    \tif (bg.repeat) {\r\n        \tcss.backgroundRepeat = bg.repeat.toString();\r\n    \t}\r\n    \tif (bg.origin) {\r\n        \tcss.backgroundOrigin = bg.origin.toString();\r\n    \t}\r\n    \tif (bg.attachment) {\r\n        \tcss.backgroundAttachment = bg.attachment.toString();\r\n    \t}\r\n    \tif (bg.size) {\r\n        \tcss.backgroundSize = bg.size.toString();\r\n    \t}\r\n\r\n        return css;\r\n\t};\r\n\r\n\r\n\treturn backgrounds.Background = Background;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-backgrounds/main',[\r\n\t\"./backgrounds\",\r\n\t\"./Background\",\r\n\t\"./BackgroundAttachment\",\r\n\t\"./BackgroundOrigin\",\r\n\t\"./BackgroundPosition\",\r\n\t\"./BackgroundSize\",\r\n\t\"./BackgroundSizeType\"\r\n],function(backgrounds){\r\n\treturn backgrounds;\r\n});\ndefine('skylark-graphics-backgrounds', ['skylark-graphics-backgrounds/main'], function (main) { return main; });\n\n"]}