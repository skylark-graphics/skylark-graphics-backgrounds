{"version":3,"sources":["skylark-graphics-backgrounds.js"],"names":["define","skylark","attach","langx","Color","brushes","GradientBrush","LinearGradientBrush","inherit","klassName","fromString","s","p","CssUtils","parseBackgroundImage","type","startPoint","webKitPosn1","endPoint","webKitPosn2","fromColor","stops","color","toColor","length","slice","map","item","offset","pos","backgrounds","BackgroundAttachment","mixin","fixed","scroll","fromCss","css","backgroundAttachment","toCss","ba","toString","BackgroundOrigin","borderBox","contentBox","paddingBox","backgroundOrigin","origin","BackgroundPosition","klass","x","get","this","_","y","clone","notEqual","bp","bs","width","height","equal","delimiter","xs","ys","_construct","props","undefined","Type","isString","a","split","fromArray","fromPlain","o","backgroundPosition","BackgroundSizeType","auto","contain","cover","measure","BackgroundSize","set","t","w","_height","-constructor-","initialize","_setupAttributeValues","fromNumber","n","MeasureType","unit","MeasureUnit","px","value","units","enumOptions","getText","concat","i","indexOf","parseInt","substring","percent","Measure","backgroundSize","Brush","SolidColorBrush","ImageBrush","RadialGradientBrush","TileRepeateMode","Background","attachment","fillStyle","position","repeat","size","params","brush","backgroundColor","backgroundImage","backgroundRepeat","bg","isInstanceOf","main"],"mappings":"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","file":"../skylark-graphics-backgrounds.js","sourcesContent":["define('skylark-graphics-backgrounds/backgrounds',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"graphics.backgrounds\",{});\r\n});\ndefine('skylark-graphics-brushes/LinearGradientBrush',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-graphics-color\",\r\n\t\"./brushes\",\r\n\t\"./GradientBrush\"\r\n\r\n],function(langx,Color,brushes,GradientBrush) {\r\n\t\r\n\tvar LinearGradientBrush = GradientBrush.inherit({\r\n\t\t\"klassName\"\t:\t\"LinearGradientBrush\",\r\n\r\n\t});\r\n\r\n\tLinearGradientBrush.fromString = function(s) {\r\n\t\tvar p = CssUtils.parseBackgroundImage(s);\r\n\t\tif (p.type == \"linear\" ) {\r\n\t\t\treturn new LinearGradientBrush({\r\n\t\t\t\tstartPoint : p.webKitPosn1,\r\n\t\t\t\tendPoint   : p.webKitPosn2,\r\n\t\t\t\tfromColor  : p.stops[0].color,\r\n\t\t\t\ttoColor    : p.stops[p.stops.length-1].color,\r\n\t\t\t\tstops      : p.stops.slice(1,p.stops.length-1).map(function(item){\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\toffset : item.pos,\r\n\t\t\t\t\t\tcolor : item.color\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\treturn brushes.LinearGradientBrush = LinearGradientBrush;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-backgrounds/BackgroundAttachment',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\"\r\n],function(langx,backgrounds) {\r\n\r\n\tvar BackgroundAttachment = \t[\"fixed\", \"scroll\"\t];\r\n\r\n\tlangx.mixin(BackgroundAttachment,{\r\n\t\t\"fixed\"  : 0, \r\n\t\t\"scroll\" : 1\r\n\t});\r\n\r\n\tBackgroundAttachment.fromCss = function(css){\r\n\t\treturn BackgroundAttachment.fromString(css.backgroundAttachment);\r\n\t};\t\r\n\r\n\tBackgroundAttachment.toCss = function(ba,css) {\r\n\t\tif (!css) {\r\n\t\t\tcss = {};\r\n\t\t}\r\n\t\tcss.backgroundAttachment = ba.toString();\r\n\t\t\r\n\t\treturn css;\r\n\t};\r\n\t\r\n\treturn backgrounds.BackgroundAttachment = BackgroundAttachment;\r\n\r\n});\r\n\ndefine('skylark-graphics-backgrounds/BackgroundOrigin',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\"\r\n],function(langx,backgrounds) {\r\n\r\n\tvar BackgroundOrigin = [\"borderBox\",\"contentBox\", \"paddingBox\"\t];\r\n\r\n\tlangx.mixin(BackgroundOrigin,{\r\n\t\t\"borderBox\" : 0,\r\n\t\t\"contentBox\" : 1, \r\n\t\t\"paddingBox\" : 2\r\n\t});\r\n\r\n\tBackgroundOrigin.fromCss = function(css) {\r\n\t\tvar s = css.backgroundOrigin;\r\n\t\tswitch (s) {\r\n\t\t\tcase \"border-box\" : \r\n\t\t\t\treturn BackgroundOrigin.borderBox;\r\n\t\t\tcase \"content-box\" : \r\n\t\t\t\treturn BackgroundOrigin.contentBox;\r\n\t\t\tcase \"padding-box\" : \r\n\t\t\t\treturn BackgroundOrigin.paddingBox;\r\n\t\t\tdefault :\r\n\t\t\t\treturn undefined;\t\t\t\r\n\t\t}\r\n\t};\r\n\t\r\n\tBackgroundOrigin.toCss = function(origin,css) {\r\n\t\tif (!css) {\r\n\t\t\tcss = {};\r\n\t\t}\r\n\t\tvar s;\r\n\t\tswitch (origin) {\r\n\t\t\tcase BackgroundOrigin.borderBox : \r\n\t\t\t\ts = \"border-box\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase BackgroundOrigin.contentBox : \r\n\t\t\t\ts = \"content-box\";\r\n\t\t\t\tbreak;\r\n\t\t\tcase BackgroundOrigin.paddingBox : \r\n\t\t\t\ts=  \"padding-box\";\r\n\t\t\t\tbreak;\r\n\t\t\tdefault :\r\n\t\t\t\treturn undefined;\t\t\t\r\n\t\t}\r\n\t\tcss.backgroundOrigin = s;\r\n\r\n\t\treturn css;\r\n\t};\r\n\r\n\treturn backgrounds.BackgroundOrigin = BackgroundOrigin;\r\n\r\n});\r\n\ndefine('skylark-graphics-backgrounds/BackgroundPosition',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\"\r\n],function(langx,backgrounds) {\r\n\r\n\r\n\tvar BackgroundPosition = langx.klass({\r\n\t\t\"klassName\"\t:\t\"BackgroundPosition\",\r\n\r\n\t\t\"x\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.x;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"y\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.y;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new BackgroundPosition(_.x,_.y);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*BackgroundPosition*/bp) {\r\n\t\t\treturn !bs || bs.type != this.type || bs.width && bs.width.notEqual(this.width) || bs.height && bs.height.notEqual(this.height);\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*BackgroundPosition*/bp){\r\n\t\t\treturn  !this.notEqual(bp);\r\n\t\t},\r\n\r\n\t\t\"toString\" : function(delimiter){\r\n\t\t\tdelimiter = delimiter ? delimiter : \" \";\r\n\t\t\t\r\n\t\t\tvar xs,ys,x = this.x,y= this.y;\r\n\r\n\t\t\txs = x.toString();\r\n\t\t\tif (xs == \"min\") {\r\n\t\t\t\txs = \"left\";\r\n\t\t\t} else if (xs == \"mid\") {\r\n\t\t\t\txs = \"center\";\r\n\t\t\t} else if (xs == \"max\") {\r\n\t\t\t\txs = \"right\";\r\n\t\t\t}\r\n\r\n\t\t\tys = y.toString();\r\n\t\t\tif (ys == \"min\") {\r\n\t\t\t\tys = \"top\";\r\n\t\t\t} else if (xs == \"mid\") {\r\n\t\t\t\tys = \"center\";\r\n\t\t\t} else if (xs == \"max\") {\r\n\t\t\t\tys = \"bottom\";\r\n\t\t\t}\r\n\r\n\t\t\treturn xs + delimiter + ys;\r\n\r\n\t\t},\t\r\n\t\t\r\n\t\t\"_construct\" : function(x,y){\r\n\t\t\tvar props = {};\r\n\t\t\tif (x != undefined) {\r\n\t\t\t\tif (Type.isString(x)) {\r\n\t\t\t\t\tif (x == \"left\") {\r\n\t\t\t\t\t\tx = \"min\";\r\n\t\t\t\t\t} else if (x == \"center\") {\r\n\t\t\t\t\t\tx = \"mid\";\r\n\t\t\t\t\t} else if (x == \"right\") {\r\n\t\t\t\t\t\tx = \"max\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprops.x = x;\r\n\t\t\t}\r\n\t\t\tif (y != undefined) {\r\n\t\t\t\tif (Type.isString(y)) {\r\n\t\t\t\t\tif (y == \"top\") {\r\n\t\t\t\t\t\ty = \"min\";\r\n\t\t\t\t\t} else if (y == \"center\") {\r\n\t\t\t\t\t\ty = \"mid\";\r\n\t\t\t\t\t} else if (y == \"bottom\") {\r\n\t\t\t\t\t\ty = \"max\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprops.y = y;\r\n\t\t\t}\r\n\t\t\tthis._ = props;\r\n\t\t}\r\n\t});\r\n\r\n\t\r\n\tBackgroundPosition.fromString = function(s) {\r\n\t\tvar a = s.split(\" \");\r\n        return BackgroundPosition.fromArray(a)\r\n\t};\r\n\r\n\tBackgroundPosition.fromPlain = function(o) {\r\n\t\treturn new BackgroundPosition(o.x,o.y);\r\n\t};\r\n\r\n\tBackgroundPosition.fromArray = function(a) {\r\n\t\treturn new BackgroundPosition(a[0],a.length>1?a[1]:\"center\");\r\n\t};\r\n\r\n\tBackgroundPosition.fromCss = function(css){\r\n\t\tif (css.backgroundPosition != undefined) {\r\n\t\t\treturn BackgroundPosition.fromString(css.backgroundPosition);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\t\r\n\r\n\tBackgroundPosition.toCss = function(bp,css) {\r\n\t\tif (!css) {\r\n\t\t\tcss = {};\r\n\t\t}\r\n\t\tif (bp) {\r\n\t\t\tcss.backgroundPosition = bp.toString();\r\n\t\t}\r\n\t\t\r\n\t\treturn css;\r\n\t};\r\n\r\n\treturn backgrounds.BackgroundPosition = BackgroundPosition;\r\n\t\r\n});\t\r\n\r\n\ndefine('skylark-graphics-backgrounds/BackgroundSizeType',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\"\r\n],function(langx,backgrounds) {\r\n\r\n\tvar BackgroundSizeType =[\"auto\",\"contain\",\"cover\",\"measure\"];\r\n\t\r\n\tlangx.mixin(BackgroundSizeType,{\r\n\t\t\"auto\" : 0,\r\n\t\t\"contain\" : 1,\r\n\t\t\"cover\" : 2,\r\n\t\t\"measure\" : 3\r\n\t});\r\n\r\n\r\n\treturn backgrounds.BackgroundSizeType = BackgroundSizeType;\r\n\r\n});\r\n\ndefine('skylark-graphics-backgrounds/BackgroundSize',[\r\n\t\"skylark-langx/langx\",\r\n\t\"./backgrounds\",\r\n\t\"./BackgroundSizeType\"\r\n],function(langx,backgrounds,BackgroundSizeType) {\r\n\r\n\tvar BackgroundSize = langx.klass({\r\n\t\t\"klassName\"\t:\t\"BackgroundSize\",\r\n\r\n\t\t\"type\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.x;\r\n\t\t\t},\r\n\t\t\tset : function(t) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t_.type = t;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase BackgroundSizeType.auto :\r\n\t\t\t\t\tcase BackgroundSizeType.contain :\r\n\t\t\t\t\tcase BackgroundSizeType.cover :\r\n\t\t\t\t\t\t_.width = null;\r\n\t\t\t\t\t\t_.height = null;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"height\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.height;\r\n\t\t\t},\r\n\t\t\tset : function(w) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.type;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase BackgroundSizeType.measure :\r\n\t\t\t\t\t\t_.width = w;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"width\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.width;\r\n\t\t\t},\r\n\t\t\tset : function(w) {\r\n\t\t\t\tvar _ = this._;\r\n\t\t\t\t\tt = _.type;\r\n\t\t\t\tswitch (t) {\r\n\t\t\t\t\tcase BackgroundSizeType.measure :\r\n\t\t\t\t\t\t_.width = w;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tdefault :\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"clone\"\t: function(){\r\n\t\t\tvar _ = this._;\r\n\t\t\treturn new BackgroundSize(_.type,_.width,_height);\r\n\t\t\r\n\t\t},\r\n\t\t\r\n\t\t\"notEqual\"\t:\tfunction(/*BackgroundSize*/bs) {\r\n\t\t\treturn !bs || bs.type != this.type || bs.width && bs.width.notEqual(this.width) || bs.height && bs.height.notEqual(this.height);\r\n\t\t},\r\n\t\t\r\n\t\t\"equal\"\t:\tfunction(/*BackgroundSize*/bs){\r\n\t\t\treturn  !this.notEqual(bs);\r\n\t\t},\r\n\r\n\t\t\"toString\" : function(delimiter){\r\n\t\t\tdelimiter = delimiter ? delimiter : \" \";\r\n\t\t\tswitch (this.type) {\r\n\t\t\t\tcase BackgroundSizeType.measure :\r\n\t\t\t\t\treturn this.width.toString()+delimiter + this.height.toString();\r\n\t\t\t\tdefault :\r\n\t\t\t\t\treturn this.type.toString();\r\n\t\t\t}\r\n\r\n\r\n\t\t},\t\r\n\t\t\r\n\t\t\"-constructor-\"\t:\t{\t\t\r\n\t\t\t\"initialize\" : function(type,width,height){\r\n\t\t\t\tvar props = {};\r\n\t\t\t\tif (type != undefined) {\r\n\t\t\t\t\tprops.type = type;\r\n\t\t\t\t}\r\n\t\t\t\tif (width != undefined) {\r\n\t\t\t\t\tprops.width = width;\r\n\t\t\t\t}\r\n\t\t\t\tif (height != undefined) {\r\n\t\t\t\t\tprops.height = height;\r\n\t\t\t\t}\r\n\t\t\t\tthis._setupAttributeValues(props);\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t});\r\n\r\n\r\n\tBackgroundSize.fromNumber = function(n) {\r\n        return new BackgroundSize(MeasureType.unit,n,MeasureUnit.px);\r\n\r\n\t};\r\n\r\n\tBackgroundSize.fromString = function(s) {\r\n\t\tvar type ;\r\n\t\tif (s==\"auto\"){\r\n\t\t\ttype =  BackgroundSizeType.auto;\r\n\t\t} else if (s == \"contain\") {\r\n\t\t\ttype =  BackgroundSizeType.contain;\r\n\t\t} else if (s == \"cover\") {\r\n\t\t\ttype =  BackgroundSizeType.cover;\r\n\t\t}\r\n\r\n\t\tif (type) {\r\n\t\t\treturn new BackgroundSize(type);\r\n\t\t}\r\n\t\t\r\n\t\ttype = BackgroundSizeType.measure;\r\n\r\n\t\tvar units = MeasureUnit.enumOptions().map(function(item){\r\n\t\t\t\treturn item.getText();\r\n\t\t\t}).concat(\"%\"),\r\n\t\t\tvalue,\r\n\t\t\tunit;\r\n        for (var i = 0; i < units.length; i++) {\r\n            if (s.indexOf(units[i]) != -1) {\r\n                value = parseInt(s.substring(0, s.length - units[i].length),10);\r\n                if (units[i] == \"%\") {\r\n                \ttype = MeasureType.percent;\r\n                } else {\r\n                \ttype = MeasureType.unit;\r\n                \tunit = MeasureUnit.fromString(units[i]);\r\n                }\r\n                break;\r\n            }\r\n        }\r\n        return new BackgroundSize(type,value,unit);\r\n\t};\r\n\r\n\tBackgroundSize.fromPlain = function(o) {\r\n\t\treturn new Measure(o.type,o.value,o.unit);\r\n\t};\r\n\r\n\tBackgroundSize.fromArray = function(a) {\r\n\t\treturn new BackgroundSize(a[0],a.length>1?a[1]:\"undefined\",a.length>1?a[2]:undefined);\r\n\t};\r\n\r\n\tBackgroundSize.fromCss = function(css){\r\n\t\tif (css.backgroundSize != undefined) {\r\n\t\t\treturn BackgroundSize.fromString(css.backgroundSize);\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\t\r\n\r\n\tBackgroundSize.toCss = function(bs,css) {\r\n\t\tif (!css) {\r\n\t\t\tcss = {};\r\n\t\t}\r\n\t\tif (bs) {\r\n\t\t\tcss.backgroundSize = bs.toString();\r\n\t\t}\r\n\t\treturn css;\r\n\t};\r\n\r\n\tBackgroundSize.auto = new BackgroundSize(BackgroundSizeType.auto);\r\n\t\r\n\r\n\treturn BackgroundSize;\r\n\t\r\n});\t\r\n\r\n\ndefine('skylark-graphics-backgrounds/Background',[\r\n\t\"skylark-langx/langx\",\r\n\t\"skylark-graphics-brushes/Brush\",\r\n\t\"skylark-graphics-brushes/SolidColorBrush\",\r\n\t\"skylark-graphics-brushes/ImageBrush\",\r\n\t\"skylark-graphics-brushes/LinearGradientBrush\",\r\n\t\"skylark-graphics-brushes/RadialGradientBrush\",\r\n\t\"skylark-graphics-brushes/TileRepeateMode\",\r\n\t\"./backgrounds\",\r\n\t\"./BackgroundAttachment\",\r\n\t\"./BackgroundOrigin\",\r\n\t\"./BackgroundPosition\",\r\n\t\"./BackgroundSize\"\r\n],function(\r\n\tlangx,\r\n\tBrush,\r\n\tSolidColorBrush,\r\n\tImageBrush,\r\n\tLinearGradientBrush,\r\n\tRadialGradientBrush,\r\n\tTileRepeateMode,\r\n\tbackgrounds,\r\n\tBackgroundAttachment,\r\n\tBackgroundOrigin,\r\n\tBackgroundPosition,\r\n\tBackgroundSize\r\n) {\r\n\tvar Background = langx.klass({\r\n\t\t\r\n\t\t\"klassName\"\t:\t\"Background\",\r\n\r\n\t\t\"attachment\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.attachment;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"fillStyle\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.fillStyle;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"origin\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.origin;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"position\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.position;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"repeat\"\t:\t{\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.repeat;\r\n\t\t\t}\r\n\t\t},\r\n\t\t\"size\" : {\r\n\t\t\tget : function() {\r\n\t\t\t\treturn this._.size;\r\n\t\t\t}\r\n\t\t},\r\n\t\ttoCss : function(css) {\r\n\t\t\treturn Background.toCss(this,css);\r\n\t\t},\r\n\t\t\"_construct\" : function(params){\r\n\t\t\tthis._ = {\r\n\t\t\t\tfillStyle : params.fillStyle,\r\n\t\t\t\trepeat \t  : params.repeat,\r\n\t\t\t\torigin \t  : params.origin,\r\n\t\t\t\tsize \t  : params.size,\r\n\t\t\t\tposition  : params.position,\r\n\t\t\t\tattachment: params.attachment\r\n\r\n\t\t\t};\r\n\t\t}\r\n\t});\r\n\r\n\tBackground.fromPlain = function(o) {\r\n\t\tvar fillStyle = o.fillStyle;\r\n\t\tvar brush = SolidColorBrush.fromString(fillStyle)\r\n\t\tif (!brush) {\r\n\t\t\tbrush = ImageBrush.fromString(fillStyle);\r\n\t\t}\t\r\n\t\tif (!brush) {\r\n\t\t\tbrush = LinearGradientBrush.fromString(fillStyle);\r\n\t\t}\r\n\t\tif (!brush) {\r\n\t\t\tbrush = RadialGradientBrush.fromString(fillStyle);\r\n\t\t}\r\n\t\tif (brush) {\r\n\t\t\treturn new Background({\r\n\t\t\t\tfillStyle : brush,\r\n\t\t\t\trepeat    : o.repeat,\r\n\t\t\t\torigin    : o.origin,\r\n\t\t\t\tsize      : o.size,\r\n\t\t\t\tposition  : o.position,\r\n\t\t\t\tattachment: o.attachment\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn null;\r\n\t\t}\r\n\t};\r\n\r\n\tBackground.fromCss = function(css) {\r\n        var props = {\r\n            fillStyle : css.backgroundColor || css.backgroundImage,\r\n            position : css.backgroundPosition,\r\n            repeat : css.backgroundRepeat,\r\n            origin : css.backgroundOrigin,\r\n            attachment : css.backgroundAttachment,\r\n            size : css.backgroundSize,\r\n\r\n        }\r\n        return Background.fromPlain(props);\r\n\t};\r\n\r\n\tBackground.toCss = function(bg,css) {\r\n        if (!css) {\r\n        \tcss = {};\r\n        }\r\n        var fillStyle = bg.fillStyle;\r\n        if (fillStyle) {\r\n        \tif (Type.isInstanceOf(fillStyle,SolidColorBrush)) {\r\n        \t\tcss.backgroundColor = fillStyle.toString();\r\n        \t} else {\r\n        \t\tcss.backgroundImage = fillStyle.toString();\r\n        \t}\r\n    \t}\r\n    \tif (bg.position) {\r\n        \tcss.backgroundPosition = bg.position.toString();\r\n    \t}\r\n    \tif (bg.repeat) {\r\n        \tcss.backgroundRepeat = bg.repeat.toString();\r\n    \t}\r\n    \tif (bg.origin) {\r\n        \tcss.backgroundOrigin = bg.origin.toString();\r\n    \t}\r\n    \tif (bg.attachment) {\r\n        \tcss.backgroundAttachment = bg.attachment.toString();\r\n    \t}\r\n    \tif (bg.size) {\r\n        \tcss.backgroundSize = bg.size.toString();\r\n    \t}\r\n\r\n        return css;\r\n\t};\r\n\r\n\r\n\treturn backgrounds.Background = Background;\r\n\t\r\n});\t\r\n\ndefine('skylark-graphics-backgrounds/main',[\r\n\t\"./backgrounds\",\r\n\t\"./Background\",\r\n\t\"./BackgroundAttachment\",\r\n\t\"./BackgroundOrigin\",\r\n\t\"./BackgroundPosition\",\r\n\t\"./BackgroundSize\",\r\n\t\"./BackgroundSizeType\"\r\n],function(backgrounds){\r\n\treturn backgrounds;\r\n});\ndefine('skylark-graphics-backgrounds', ['skylark-graphics-backgrounds/main'], function (main) { return main; });\n\n"]}